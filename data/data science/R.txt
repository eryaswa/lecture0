#intro
"Hello World"
1 + 5
c(5:10)
pi <- 3.14
var_berupa_numerik <- is.numeric("Jakarta")
#vector,list,dataframe
angka <- c(4,5,6)
print(angka)
angka2 <- c(1:10)
print(angka2)
nama_mahasiswa <- c("Amira","Budi","Charlie")
print(nama_mahasiswa)
kode_prodi <- c("DKV","ILKOM","ICT")
print(kode_prodi[3])
nilai <- c(statistik = 89, fisika = 95, ilmukomunikasi = 100)
print(nilai["fisika"])
kota <- list(nama_kota = "Makassar",propinsi = "Sulawesi Selatan", luas_km2 = 199.3)
kota[1:3]
fakultas <- c("Bisnis", "D3 Perhotelan", "ICT", "Ilmu Komunikasi", "Seni dan Desain")
jumlah_mahasiswa <- c(260, 28, 284, 465, 735)
akreditasi <- c("A","A","B","A","A")
info_mahasiswa <- data.frame(fakultas,jumlah_mahasiswa,akreditasi)
info_mahasiswa$fakultas
#graphicplot
library("ggplot2")
gambar <- ggplot(info_mahasiswa, aes(x=fakultas, y=jumlah_mahasiswa, fill=fakultas))
gambar <- gambar + geom_bar(width=1, stat="identity")
gambar <- gambar + ggtitle("Jumlah Mahasiswa per Fakultas")
gambar <- gambar + xlab("Nama Fakultas")
gambar <- gambar + ylab("Jumlah Mahasiswa")
gambar
#readexcel
library(openxlsx)
mahasiswa <- read.xlsx("https://dqlab.id/mahasiswa.xlsx",sheet = "Sheet 1")
mahasiswa$Prodi
#menghitungdatadgplot
summarybyfakultas <- aggregate(x=mahasiswa$JUMLAH, by=list(Kategori=mahasiswa$Fakultas, Tahun=mahasiswa$ANGKATAN), FUN=sum)
summarybyfakultas <- setNames(summarybyfakultas, c("fakultas","tahun", "jumlah_mahasiswa"))
summarybyfakultas

summarybyfakultas$tahun = as.factor(summarybyfakultas$tahun)

ggplot(summarybyfakultas, aes(x=fakultas, y=jumlah_mahasiswa)) + 
  geom_bar(stat = "identity", aes(fill = tahun), width=0.8, position = position_dodge(width=0.8)) + 
  theme_classic() 
#piechart
piechart<- ggplot(summarybyfakultas, aes(x="", y=jumlah_mahasiswa, fill=fakultas))+ geom_bar(width = 1, stat = "identity")
piechart <- piechart + coord_polar("y", start=0)
piechart <- piechart + ggtitle("Disribusi Mahasiswa per Fakultas")
piechart <- piechart + scale_fill_brewer(palette="Blues")+ theme_minimal()
piechart <- piechart + guides(fill=guide_legend(title="Fakultas"))
piechart <- piechart + ylab("Jumlah Mahasiswa") 
piechart
#filtering
library("ggplot2")
library("openxlsx")

#Membaca file mahasiswa.xlsx
mahasiswa <- read.xlsx("https://academy.dqlab.id/dataset/mahasiswa.xlsx",sheet = "Sheet 1")

#Menghitung Jumlah Data by Fakultas
summarybyfakultas <- aggregate(x=mahasiswa$JUMLAH, by=list(Kategori=mahasiswa$Fakultas, Tahun=mahasiswa$ANGKATAN), FUN=sum)
summarybyfakultas <- setNames(summarybyfakultas, c("fakultas","tahun", "jumlah_mahasiswa"))
summarybyfakultas

summarybyfakultas$tahun = as.factor(summarybyfakultas$tahun)
summarybyfakultas[summarybyfakultas$fakultas %in% c("ICT", "Ilmu Komunikasi"),]

ggplot(summarybyfakultas[summarybyfakultas$fakultas %in% c("ICT", "Ilmu Komunikasi"),], aes(x=fakultas, y=jumlah_mahasiswa)) + 
  geom_bar(stat = "identity", aes(fill = tahun), width=0.8, position = position_dodge(width=0.8)) + 
  theme_classic() 






#statistics
data_intro <- read.csv("https://academy.dqlab.id/dataset/data_intro.csv",sep=";")
str(data_intro)
#merubahtipedata
data_intro$ID.Pelanggan<-as.character(data_intro$ID.Pelanggan)
data_intro$Nama<-as.character(data_intro$Nama)
data_intro$Jenis.Kelamin <- as.factor(data_intro$Jenis.Kelamin)
data_intro$Produk <- as.factor(data_intro$Produk)
data_intro$Tingkat.Kepuasan <- as.factor(data_intro$Tingkat.Kepuasan)
#modus,median.mean
library(pracma)
mode(data_intro$Pendapatan)
summary(data_intro)
#range,varians,standardeviai
max(data_intro$Pendapatan)-min(data_intro$Pendapatan)
var(data_intro$Pendapatan)
sd(data_intro$Pendapatan)
#analisdeskriptifdgvisual
plot(data_intro$Jenis.Kelamin)
hist(data_intro$Pendapatan)

#cortest(numerik)
plot(data_intro$Pendapatan,data_intro$Total)
cor.test(data_intro$Pendapatan,data_intro$Total)
#chisqtest(kategorik)
table(data_intro$Produk,data_intro$Tingkat.Kepuasan)
chisq.test(table(data_intro$Produk,data_intro$Tingkat.Kepuasan))
#ttest(kategoriknumerik)
boxplot(Total~Jenis.Kelamin,data = data_intro)
t.test(Total~Jenis.Kelamin,data = data_intro) 



typeof(NA)
isi.vector <- c(1,2,NA,4,5,NaN,6)
sum(is.na( isi.vector) == TRUE)
faktor.bulan <- factor(c("Jan","Feb","Mar"))
attributes(faktor.bulan)




#dataprep
penduduk.dki.csv <-read.csv("https://academy.dqlab.id/dataset/dkikepadatankelurahan2013.csv", sep=",")
summary(penduduk.dki.csv)
str(penduduk.dki.csv)
names(penduduk.dki.csv)
names(penduduk.dki.csv)[c(1:2)] <- c("PERIODE", "PROPINSI")
#Membuang kolom X, X.1, X.2 s/d X.11
penduduk.dki.csv <- penduduk.dki.csv[,!names(penduduk.dki.csv) %in% c("X", "X.1","X.2","X.3","X.4","X.5","X.6","X.7","X.8","X.9","X.10","X.11")] 

#as.factor
library(openxlsx)
penduduk.dki.xlsx <- read.xlsx(xlsxFile="https://academy.dqlab.id/dataset/dkikepadatankelurahan2013.xlsx")
penduduk.dki.xlsx$NAMA.PROVINSI <- as.factor(penduduk.dki.xlsx$NAMA.PROVINSI)
str(penduduk.dki.xlsx)
#grep
pola_nama_perempuan <- grep(pattern="perempuan", x = names(penduduk.dki.xlsx), ignore.case=TRUE)
names(penduduk.dki.xlsx[pola_nama_perempuan])
#kolombaru
penduduk.dki.xlsx$PEREMPUAN35TAHUNKEATAS  <- rowSums(penduduk.dki.xlsx[pola_nama_perempuan])
#melt(kolomkedata)
library(reshape2)
penduduk.dki.transform <- melt(data=penduduk.dki.xlsx, id.vars=c( "NAMA.KECAMATAN", "NAMA.KELURAHAN"), measure.vars = c("35-39.Laki-Laki", "35-39.Perempuan"), variable.name = "DEMOGRAFIK", value.name="JUMLAH") 
#colsplit(memecahdata)
penduduk.dki.transform[c("RENTANG.UMUR", "JENIS.KELAMIN")] <- colsplit(penduduk.dki.transform$DEMOGRAFIK,"\\.",c("RENTANG.UMUR","JENIS.KELAMIN"))
penduduk.dki.transform$DEMOGRAFIK <- NULL








#dataexplore
library(openxlsx)
library(bpa)
data.pelanggan <- read.xlsx("https://academy.dqlab.id/dataset/dqlab_messy_data_pelanggan.xlsx", sheet="Pelanggan")
data.pelanggan$Aktif <- as.factor(data.pelanggan$Aktif)
basic_pattern_analysis(data.pelanggan$Kode.Pelanggan, unique_only=TRUE)
data.pelanggan[basic_pattern_analysis(data.pelanggan$Kode.Pelanggan)=="AA-9999" ,]
basic_pattern_analysis(data.pelanggan$Nama, unique_only=TRUE)
grepl(pattern="[a]", x="pelanggan")
grepl(pattern="[^a]", x="pelanggan")
grepl(pattern="[bc]", x="pelanggan")
grepl(pattern="[^bc]", x="pelanggan")
grepl(pattern="[s]", x="pelanggan")
grepl(pattern="[^s]", x="pelanggan")
grepl(pattern="aa", x="pelanggan")
#Menggunakan function grepl untuk mengambil pola nama tidak lazim
data.pelanggan[grepl(pattern="[^Aaw.,]", x=basic_pattern_analysis(data.pelanggan$Nama)),]
data.pelanggan[grepl(pattern="ww", x=basic_pattern_analysis(data.pelanggan$Nama)),]
#Profiling pola seluruh kolom
basic_pattern_analysis(data.pelanggan) 
pola.data.pelanggan <- basic_pattern_analysis(data.pelanggan)
names(pola.data.pelanggan)<-paste("Pola",names(pola.data.pelanggan),sep=".")
data.pelanggan <- cbind(data.pelanggan, pola.data.pelanggan)
#Menulis File Excel
write.xlsx(data.pelanggan, file="data.pelanggan.xlsx") 

#koneksidatabase
library(RMySQL)
#Membuka koneksi
con <- dbConnect(MySQL(), user="demo", password="demo", host="mysqlhost",
                 dbname="dqlabdatawrangling")
#Menutup Koneksi
all_cons <- dbListConnections(MySQL())
for(con in all_cons) dbDisconnect(con)
#select
sql <- "SELECT * FROM dqlab_messy_data"
sql <- "SELECT kode_pelanggan, nama FROM dqlab_messy_data WHERE nama = 'Safira Hana Sahrani'"
sql <- "SELECT kode_pelanggan, nama FROM dqlab_messy_data WHERE nama like 'B%'"
sql <-  "SELECT kode_pelanggan, nama FROM dqlab_messy_data WHERE nama REGEXP '[xz]'"
rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
data.pelanggan <- fetch(rs, n=-1)
#menghapusspasi
sql <- "SELECT kode_pelanggan, nama from dqlab_messy_data where nama REGEXP ' {2,}'"
sql <- "SELECT kode_pelanggan, nama from dqlab_messy_data where nama REGEXP '[^A-Za-z .,]'"
sql <- "SELECT kode_pelanggan, nama from dqlab_messy_data where nama like '%ibu%' or nama like '%bapak%'"
rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
data.pelanggan <- fetch(rs, n=-1)
data.pelanggan$nama <- gsub(" {2,}", " ", data.pelanggan$nama)
data.pelanggan$nama <- gsub("[^A-Za-z .,]", "", data.pelanggan$nama)
data.pelanggan$nama <- gsub("\\bbapak\\b", "",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- gsub("\\bibu\\b", "",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- gsub("\\bir\\b", "Ir",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- trimws(data.pelanggan$nama, which="both")
#cleansing
sql <- "SELECT kode_pelanggan, nama from dqlab_messy_data"
rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
data.pelanggan <- fetch(rs, n=-1)
data.pelanggan$nama.before <- data.pelanggan$nama
data.pelanggan$nama <- gsub("[^A-Za-z .,]", "", data.pelanggan$nama)
data.pelanggan$nama <- gsub("\\bbapak\\b", "",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- gsub("\\bibu\\b", "",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- gsub("\\bir\\b", "Ir",data.pelanggan$nama, ignore.case = TRUE)
data.pelanggan$nama <- gsub("[ ]{2,}", " ", data.pelanggan$nama)
data.pelanggan$nama <- trimws(data.pelanggan$nama, which="both")
write.xlsx(data.pelanggan, file="staging.nama.xlsx")
#notelp
sql <- "SELECT pola_no_telepon, length(pola_no_telepon) as panjang_text, count(*) as jumlah_data from dqlab_messy_data group by pola_no_telepon"
sql <-  "SELECT left(no_telepon,1) as prefix_no_telepon, pola_no_telepon from dqlab_messy_data where pola_no_telepon = '999999999999999' group by left(no_telepon,1), pola_no_telepon"
sql <- "SELECT left(no_telepon,2) as prefix_no_telepon, pola_no_telepon from dqlab_messy_data where pola_no_telepon = '9999999999999999' group by left(no_telepon,2), pola_no_telepon"
sql <- "SELECT left(no_telepon,3) as prefix_no_telepon, pola_no_telepon from dqlab_messy_data where pola_no_telepon = '+9999999999999999' group by left(no_telepon,3), pola_no_telepon"
rs <- tryCatch(dbSendQuery(con, sql), finally = print("query ok"))
profil_no_telepon <- fetch(rs, n=-1)
print(profil_no_telepon)
#Plotting data
plot.profile <- ggplot(data=profil_no_telepon, aes(x = pola_no_telepon, y = jumlah_data, fill = pola_no_telepon))
plot.profile <- plot.profile + theme(axis.text.x = element_text(angle=45,vjust = 0.5))
plot.profile + geom_bar(stat="identity")
dbClearResult(rs)







